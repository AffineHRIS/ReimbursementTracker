"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var SimpleHeaderComponent = (function () {
    function SimpleHeaderComponent() {
        this.model = {};
        this.eventEmitter = new core_1.EventEmitter();
        this.isHidden = false;
    }
    SimpleHeaderComponent.prototype.setVisibility = function (visible) {
        this.isHidden = !visible;
    };
    __decorate([
        core_1.HostBinding("hidden"), 
        __metadata('design:type', Boolean)
    ], SimpleHeaderComponent.prototype, "isHidden", void 0);
    SimpleHeaderComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: "th[simple-header]",
            inputs: ["name", "model"],
            outputs: ["eventEmitter"],
            template: "\n    {{model.displayName}}\n  "
        }), 
        __metadata('design:paramtypes', [])
    ], SimpleHeaderComponent);
    return SimpleHeaderComponent;
}());
exports.SimpleHeaderComponent = SimpleHeaderComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltcGxlLWhlYWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzaW1wbGUtaGVhZGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEscUJBQTZFLGVBQWUsQ0FBQyxDQUFBO0FBYTdGO0lBQUE7UUFFRSxVQUFLLEdBQVEsRUFBRSxDQUFDO1FBQ2hCLGlCQUFZLEdBQVEsSUFBSSxtQkFBWSxFQUFFLENBQUM7UUFFaEIsYUFBUSxHQUFZLEtBQUssQ0FBQztJQUtuRCxDQUFDO0lBSEMsNkNBQWEsR0FBYixVQUFjLE9BQWdCO1FBQzVCLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxPQUFPLENBQUM7SUFDM0IsQ0FBQztJQUpEO1FBQUMsa0JBQVcsQ0FBQyxRQUFRLENBQUM7OzJEQUFBO0lBZnhCO1FBQUMsZ0JBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxNQUFNLENBQUMsRUFBRTtZQUNuQixRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLE1BQU0sRUFBRSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUM7WUFDekIsT0FBTyxFQUFFLENBQUMsY0FBYyxDQUFDO1lBQ3pCLFFBQVEsRUFBRSxpQ0FFVDtTQUNGLENBQUM7OzZCQUFBO0lBWUYsNEJBQUM7QUFBRCxDQUFDLEFBVkQsSUFVQztBQVZZLDZCQUFxQix3QkFVakMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBPbkNoYW5nZXMsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmd9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQge1RhYmxlSGVhZGVyfSBmcm9tIFwiLi90YWJsZS1oZWFkZXJcIjtcblxuQENvbXBvbmVudCh7XG4gIG1vZHVsZUlkOiBtb2R1bGUuaWQsXG4gIHNlbGVjdG9yOiBcInRoW3NpbXBsZS1oZWFkZXJdXCIsXG4gIGlucHV0czogW1wibmFtZVwiLCBcIm1vZGVsXCJdLFxuICBvdXRwdXRzOiBbXCJldmVudEVtaXR0ZXJcIl0sXG4gIHRlbXBsYXRlOiBgXG4gICAge3ttb2RlbC5kaXNwbGF5TmFtZX19XG4gIGBcbn0pXG5cbmV4cG9ydCBjbGFzcyBTaW1wbGVIZWFkZXJDb21wb25lbnQgaW1wbGVtZW50cyBUYWJsZUhlYWRlciB7XG4gIG5hbWU6IHN0cmluZztcbiAgbW9kZWw6IGFueSA9IHt9O1xuICBldmVudEVtaXR0ZXI6IGFueSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBASG9zdEJpbmRpbmcoXCJoaWRkZW5cIikgaXNIaWRkZW46IGJvb2xlYW4gPSBmYWxzZTtcblxuICBzZXRWaXNpYmlsaXR5KHZpc2libGU6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLmlzSGlkZGVuID0gIXZpc2libGU7XG4gIH1cbn1cbiJdfQ==