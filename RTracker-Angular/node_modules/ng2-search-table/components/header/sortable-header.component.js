"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var SortableHeaderComponent = (function () {
    function SortableHeaderComponent() {
        this.model = {};
        this.eventEmitter = new core_1.EventEmitter();
        this.isHidden = false;
    }
    Object.defineProperty(SortableHeaderComponent.prototype, "asc", {
        get: function () { return this.model.direction === "asc"; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SortableHeaderComponent.prototype, "desc", {
        get: function () { return this.model.direction === "desc"; },
        enumerable: true,
        configurable: true
    });
    SortableHeaderComponent.prototype.onToggleSort = function () {
        switch (this.model.direction) {
            case "asc":
                this.model.direction = "desc";
                break;
            case "desc":
                this.model.direction = "asc";
                break;
            default:
                this.model.direction = "asc";
                break;
        }
        this.eventEmitter.emit({
            value: this.model.direction,
            model: this.model,
            name: this.name
        });
    };
    SortableHeaderComponent.prototype.setVisibility = function (visible) {
        this.isHidden = !visible;
    };
    __decorate([
        core_1.HostBinding("hidden"), 
        __metadata('design:type', Boolean)
    ], SortableHeaderComponent.prototype, "isHidden", void 0);
    __decorate([
        core_1.HostBinding("class.sort-asc"), 
        __metadata('design:type', Object)
    ], SortableHeaderComponent.prototype, "asc", null);
    __decorate([
        core_1.HostBinding("class.sort-desc"), 
        __metadata('design:type', Object)
    ], SortableHeaderComponent.prototype, "desc", null);
    SortableHeaderComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: "th[simple-sortable-header]",
            inputs: ["name", "model"],
            outputs: ["eventEmitter"],
            host: {
                "(click)": "onToggleSort()"
            },
            template: "\n    {{model.displayName}}\n    <i class=\"pull-right fa\"\n    [ngClass]=\"{'fa-sort': (model.direction != 'asc' && model.direction != 'desc'),\n      'fa-sort-asc': model.direction == 'asc',\n      'fa-sort-desc': model.direction == 'desc'}\"\n    aria-hidden='true'></i>\n  "
        }), 
        __metadata('design:paramtypes', [])
    ], SortableHeaderComponent);
    return SortableHeaderComponent;
}());
exports.SortableHeaderComponent = SortableHeaderComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydGFibGUtaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNvcnRhYmxlLWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLHFCQUE2RSxlQUFlLENBQUMsQ0FBQTtBQXFCN0Y7SUFBQTtRQUVFLFVBQUssR0FBUSxFQUFFLENBQUM7UUFDaEIsaUJBQVksR0FBUSxJQUFJLG1CQUFZLEVBQUUsQ0FBQztRQUVoQixhQUFRLEdBQVksS0FBSyxDQUFDO0lBMkJuRCxDQUFDO0lBMUJnQyxzQkFBSSx3Q0FBRzthQUFQLGNBQVksTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7OztPQUFBO0lBQ25ELHNCQUFJLHlDQUFJO2FBQVIsY0FBYSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQzs7O09BQUE7SUFFL0UsOENBQVksR0FBbkI7UUFDRSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDN0IsS0FBSyxLQUFLO2dCQUNSLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQztnQkFDOUIsS0FBSyxDQUFDO1lBQ1IsS0FBSyxNQUFNO2dCQUNULElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztnQkFDN0IsS0FBSyxDQUFDO1lBQ1I7Z0JBQ0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO2dCQUM3QixLQUFLLENBQUM7UUFDVixDQUFDO1FBRUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUM7WUFDckIsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUztZQUMzQixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1NBQ2hCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCwrQ0FBYSxHQUFiLFVBQWMsT0FBZ0I7UUFDNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLE9BQU8sQ0FBQztJQUMzQixDQUFDO0lBMUJEO1FBQUMsa0JBQVcsQ0FBQyxRQUFRLENBQUM7OzZEQUFBO0lBQ3RCO1FBQUMsa0JBQVcsQ0FBQyxnQkFBZ0IsQ0FBQzs7c0RBQUE7SUFDOUI7UUFBQyxrQkFBVyxDQUFDLGlCQUFpQixDQUFDOzt1REFBQTtJQXpCakM7UUFBQyxnQkFBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1lBQ25CLFFBQVEsRUFBRSw0QkFBNEI7WUFDdEMsTUFBTSxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQztZQUN6QixPQUFPLEVBQUUsQ0FBQyxjQUFjLENBQUM7WUFDekIsSUFBSSxFQUFFO2dCQUNKLFNBQVMsRUFBRSxnQkFBZ0I7YUFDNUI7WUFDRCxRQUFRLEVBQUUsd1JBT1Q7U0FDRixDQUFDOzsrQkFBQTtJQWtDRiw4QkFBQztBQUFELENBQUMsQUFoQ0QsSUFnQ0M7QUFoQ1ksK0JBQXVCLDBCQWdDbkMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBPbkNoYW5nZXMsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmd9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQge1RhYmxlSGVhZGVyfSBmcm9tIFwiLi90YWJsZS1oZWFkZXJcIjtcblxuQENvbXBvbmVudCh7XG4gIG1vZHVsZUlkOiBtb2R1bGUuaWQsXG4gIHNlbGVjdG9yOiBcInRoW3NpbXBsZS1zb3J0YWJsZS1oZWFkZXJdXCIsXG4gIGlucHV0czogW1wibmFtZVwiLCBcIm1vZGVsXCJdLFxuICBvdXRwdXRzOiBbXCJldmVudEVtaXR0ZXJcIl0sXG4gIGhvc3Q6IHtcbiAgICBcIihjbGljaylcIjogXCJvblRvZ2dsZVNvcnQoKVwiXG4gIH0sXG4gIHRlbXBsYXRlOiBgXG4gICAge3ttb2RlbC5kaXNwbGF5TmFtZX19XG4gICAgPGkgY2xhc3M9XCJwdWxsLXJpZ2h0IGZhXCJcbiAgICBbbmdDbGFzc109XCJ7J2ZhLXNvcnQnOiAobW9kZWwuZGlyZWN0aW9uICE9ICdhc2MnICYmIG1vZGVsLmRpcmVjdGlvbiAhPSAnZGVzYycpLFxuICAgICAgJ2ZhLXNvcnQtYXNjJzogbW9kZWwuZGlyZWN0aW9uID09ICdhc2MnLFxuICAgICAgJ2ZhLXNvcnQtZGVzYyc6IG1vZGVsLmRpcmVjdGlvbiA9PSAnZGVzYyd9XCJcbiAgICBhcmlhLWhpZGRlbj0ndHJ1ZSc+PC9pPlxuICBgXG59KVxuXG5leHBvcnQgY2xhc3MgU29ydGFibGVIZWFkZXJDb21wb25lbnQgaW1wbGVtZW50cyBUYWJsZUhlYWRlciB7XG4gIG5hbWU6IHN0cmluZztcbiAgbW9kZWw6IGFueSA9IHt9O1xuICBldmVudEVtaXR0ZXI6IGFueSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBASG9zdEJpbmRpbmcoXCJoaWRkZW5cIikgaXNIaWRkZW46IGJvb2xlYW4gPSBmYWxzZTtcbiAgQEhvc3RCaW5kaW5nKFwiY2xhc3Muc29ydC1hc2NcIikgZ2V0IGFzYygpIHsgcmV0dXJuIHRoaXMubW9kZWwuZGlyZWN0aW9uID09PSBcImFzY1wiOyB9XG4gIEBIb3N0QmluZGluZyhcImNsYXNzLnNvcnQtZGVzY1wiKSBnZXQgZGVzYygpIHsgcmV0dXJuIHRoaXMubW9kZWwuZGlyZWN0aW9uID09PSBcImRlc2NcIjsgfVxuXG4gIHB1YmxpYyBvblRvZ2dsZVNvcnQoKSB7XG4gICAgc3dpdGNoICh0aGlzLm1vZGVsLmRpcmVjdGlvbikge1xuICAgICAgY2FzZSBcImFzY1wiOlxuICAgICAgICB0aGlzLm1vZGVsLmRpcmVjdGlvbiA9IFwiZGVzY1wiO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJkZXNjXCI6XG4gICAgICAgIHRoaXMubW9kZWwuZGlyZWN0aW9uID0gXCJhc2NcIjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aGlzLm1vZGVsLmRpcmVjdGlvbiA9IFwiYXNjXCI7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIHRoaXMuZXZlbnRFbWl0dGVyLmVtaXQoe1xuICAgICAgdmFsdWU6IHRoaXMubW9kZWwuZGlyZWN0aW9uLFxuICAgICAgbW9kZWw6IHRoaXMubW9kZWwsXG4gICAgICBuYW1lOiB0aGlzLm5hbWVcbiAgICB9KTtcbiAgfVxuXG4gIHNldFZpc2liaWxpdHkodmlzaWJsZTogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMuaXNIaWRkZW4gPSAhdmlzaWJsZTtcbiAgfVxufVxuIl19