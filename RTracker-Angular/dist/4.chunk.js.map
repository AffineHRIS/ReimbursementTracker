{"version":3,"sources":["D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password-routing.module.ts","D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password.component.html","D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password.component.scss","D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password.component.ts","D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password.module.ts"],"names":[],"mappings":"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","file":"4.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PasswordComponent } from './password.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: PasswordComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PasswordRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password-routing.module.ts","module.exports = \"<div class=\\\"section-container\\\">\\r\\n    <h6 class=\\\"section-content-header\\\">Change Password</h6>\\r\\n</div>\\r\\n<div class=\\\"horizontal-pipe-line\\\"></div>\\r\\n<div class=\\\"alert alert-warning\\\" role=\\\"alert\\\" *ngIf=\\\"ftlogin\\\">\\r\\n  <strong>Warning!</strong> Please change your password.\\r\\n</div>\\r\\n\\r\\n<div class=\\\"section-detail-container\\\">\\r\\n    <form novalidate #chPwdForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSumbit(chPwdForm.value)\\\" class=\\\"hris-form\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <label class=\\\"col-4 aa-hris-input-label\\\"> Enter Current Password <span class=\\\"pull-right\\\"> : </span> </label>\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <input type=\\\"password\\\" name=\\\"Current_Password\\\" [(ngModel)]=\\\"Current_Password\\\" #cp=\\\"ngModel\\\" class=\\\"form-control aa-hris-pwd-input\\\" required>\\r\\n                            <div *ngIf=\\\"cp.invalid && (cp.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"cp.errors.required\\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t\\tCurrent password is required.\\r\\n    \\t\\t\\t\\t\\t\\t\\t</div>\\r\\n    \\t\\t\\t\\t\\t\\t</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <label class=\\\"col-4 aa-hris-input-label\\\"> Enter New Password <span class=\\\"pull-right\\\"> : </span> </label>\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <input type=\\\"password\\\" name=\\\"New_Password\\\" [(ngModel)]=\\\"New_Password\\\" #np=\\\"ngModel\\\" class=\\\"form-control aa-hris-pwd-input\\\" required minlength=\\\"4\\\" (input)=\\\"checkOldNewPassword()\\\" >\\r\\n                            <div *ngIf=\\\"np.invalid && (np.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"np.errors.required\\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t\\tNew password is required.\\r\\n    \\t\\t\\t\\t\\t\\t\\t</div>\\r\\n    \\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"np.hasError('minlength')\\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t\\tAt least 4 character password is required.\\r\\n    \\t\\t\\t\\t\\t\\t\\t</div>\\r\\n    \\t\\t\\t\\t\\t\\t</div>\\r\\n                            <div *ngIf=\\\"oldNewPwdAlertMessage.length > 0\\\" class=\\\"alert alert-danger\\\">\\r\\n                                {{ oldNewPwdAlertMessage }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <label class=\\\"col-4 aa-hris-input-label\\\"> Confirm New Password <span class=\\\"pull-right\\\"> : </span> </label>\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                            <input type=\\\"password\\\" name=\\\"Confirm_New_Password\\\" [(ngModel)]=\\\"Confirm_New_Password\\\" #cnp=\\\"ngModel\\\" class=\\\"form-control aa-hris-pwd-input\\\" required (blur)=\\\"checkNewPassword()\\\" >\\r\\n                            <div *ngIf=\\\"cnp.invalid && (cnp.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"cnp.errors.required\\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t\\tPlease re-enter the new password.\\r\\n    \\t\\t\\t\\t\\t\\t\\t</div>\\r\\n    \\t\\t\\t\\t\\t\\t</div>\\r\\n                            <div *ngIf=\\\"confirmPwdAlertMessage.length > 0\\\" class=\\\"alert alert-danger\\\">\\r\\n                                {{ confirmPwdAlertMessage }}\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-5 aa-hris-btn-group\\\">\\r\\n                <button class=\\\"btn btn-default btn-primary submit pull-right \\\" type=\\\"submit\\\"> Submit </button>\\r\\n                <button class=\\\"btn btn-default btn-secondary cancel pull-right\\\" type=\\\"reset\\\" (click)=\\\"cancel()\\\"> Cancel </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password.component.html\n// module id = ../../../../../src/app/layout/password/password.component.html\n// module chunks = 4","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tab-h6 {\\n  font-size: 18px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password.component.scss\n// module id = ../../../../../src/app/layout/password/password.component.scss\n// module chunks = 4","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { PasswordService } from '../../shared';\r\n\r\n@Component({\r\n    selector: 'app-password',\r\n    templateUrl: './password.component.html',\r\n    styleUrls: ['./password.component.scss']\r\n})\r\nexport class PasswordComponent implements OnInit {\r\n\r\n    Current_Password: string = \"\";\r\n    New_Password: string = \"\";\r\n    Confirm_New_Password: string = \"\";\r\n    confirmPwdAlertMessage: string = \"\";\r\n    oldNewPwdAlertMessage: string = \"\";\r\n    ftlogin : boolean = false;\r\n\r\n    @ViewChild('chPwdForm') chPwdForm: any;\r\n\r\n    constructor(\r\n        private passwordService: PasswordService,\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.ftlogin = params['lpc_at'] === \"null\" ? true : false;\r\n        });\r\n    }\r\n\r\n    checkOldNewPassword(): void {\r\n        if ( this.New_Password.length && this.Current_Password && this.New_Password === this.Current_Password ) {\r\n            this.oldNewPwdAlertMessage = \"Current and new passwords cannot be the same.\";\r\n        } else {\r\n            this.oldNewPwdAlertMessage = \"\";\r\n        }\r\n    }\r\n\r\n    checkNewPassword(): void {\r\n        if ( this.New_Password.length && this.Confirm_New_Password && this.New_Password !== this.Confirm_New_Password ) {\r\n            this.confirmPwdAlertMessage = \"New Password and Confirm New Password fields do not match.\";\r\n        } else {\r\n            this.confirmPwdAlertMessage = \"\";\r\n        }\r\n    }\r\n\r\n    onSumbit(model: any) {\r\n\r\n        this.checkOldNewPassword();\r\n        this.checkNewPassword();\r\n\r\n        if ( this.chPwdForm.valid && this.confirmPwdAlertMessage == \"\" && this.oldNewPwdAlertMessage == \"\" ) {\r\n            console.log(\"Submitted!\");\r\n\r\n            model[\"username\"] = sessionStorage.getItem('username');\r\n\r\n            this.passwordService.changePassword(model)\r\n            .subscribe(\r\n                (response) => {\r\n                    let body = response.json();\r\n                    if ( body.result === \"success\" ) {\r\n                        sessionStorage.removeItem('isLoggedin');\r\n                        sessionStorage.removeItem('userRole');\r\n                        sessionStorage.removeItem('username');\r\n                        sessionStorage.removeItem('empname');\r\n                        this.router.navigate(['/login']);\r\n                    }\r\n                    alert( body.message );\r\n                },\r\n                (error) => console.log(error)\r\n            );\r\n\r\n        } else {\r\n            alert( \"Required fields are mandatory.\" );\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.chPwdForm.reset();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password.component.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PasswordRoutingModule } from './password-routing.module';\r\nimport { PasswordComponent } from './password.component';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        PasswordRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TranslateModule,\r\n        NgbModule.forRoot()\r\n    ],\r\n    declarations: [\r\n        PasswordComponent\r\n    ],\r\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\nexport class PasswordModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/ReimbursementTracker/RTracker-Angular/src/app/layout/password/password.module.ts"],"sourceRoot":"webpack:///"}